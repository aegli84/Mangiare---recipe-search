{"version":3,"sources":["components/Recipe.js","GlobalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","motion","div","H1","h1","Image","img","UL","ul","Li","li","A","a","Recipe","title","ingredients","image","link","useState","show","setShow","drag","dragConstraints","top","left","right","bottom","whileHover","scale","size","onClick","map","ingredient","text","uuidv4","src","alt","href","target","rel","GlobalStyle","createGlobalStyle","Logo","Form","form","SearchBar","input","Button","button","Recipes","App","recipes","setRecipes","search","setSearch","query","setQuery","inputRef","useRef","useEffect","getRecipes","current","focus","fetch","process","response","json","data","hits","console","log","className","onSubmit","e","preventDefault","type","placeholder","autoComplete","ref","value","onChange","food","recipe","label","calories","dish","weight","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7287314b.chunk.js","sourcesContent":["import { useState } from 'react'\nimport styled from 'styled-components'\nimport {v4 as uuidv4 } from 'uuid'\nimport { BiLinkExternal } from 'react-icons/bi';\nimport { IoIosArrowDropdown } from 'react-icons/io';\nimport { motion } from \"framer-motion\"\n\nconst Recipe = ({title, ingredients, image, link}) => {\n    const [show, setShow] = useState(false);\n    return(\n        <Wrapper \n            // animate={{ y: 30 }}\n            // transition={{ \n            //     type: 'spring',\n            //     bounce: 0.25,\n            //     ease: 'easeInOut',\n            // }}\n            drag\n            dragConstraints={{\n                top: -100,\n                left: -70,\n                right: 100,\n                bottom: 90,\n            }}>\n            <H1>{title}</H1>\n            <motion.div  whileHover={{ scale: 1.3 }} >\n            <IoIosArrowDropdown size = '2em' onClick={() => setShow(!show)}/>\n            </motion.div>\n            {show && <UL key = {uuidv4()}>{ingredients.map(ingredient =>(\n                <Li key = {uuidv4()}>{ingredient.text}</Li>\n            ))}\n            </UL>}\n            \n            {/* <p><span>Calories:</span> {calories}</p> */}\n            <Image src={image} alt={title}/>\n            <A href={link} \n            //required for opening in a new window\n                target = \"_blank\" \n                //required for security purposes\n                rel = \"noopener noreferrer\">Source <BiLinkExternal/></A>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled(motion.div)`\n    width: 25rem;\n    border-radius: 1rem;\n    box-shadow: 0px 5px 20px #424b54;\n    margin: 12px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    background: #6e9d9c;\n    color: #fedbd0;\n    overflow: hidden;\n    border: 4px solid #eed0c6;\n    &:hover {\n        box-shadow: 0px 5px 20px black;\n    }\n`\nconst H1 = styled.h1 `\n    padding: 1rem;\n`\nconst Image = styled.img`\n    width: 25rem;\n    height: 35vh;\n    padding-top: 1vh;\n    object-fit: cover;\n    \n`\n\nconst UL = styled.ul`\n    text-align: center;\n    padding: 1rem;\n`\n\nconst Li = styled.li`\n    list-style: none;\n`\n\nconst A = styled.a`\n    text-decoration: none;\n    color: #eed0c6;\n    font-size: 1.2rem;\n    font-weight: 700;\n    padding: 1rem;\n    &:hover {\n        color: black;\n    }\n`\n\nexport default Recipe;","import { createGlobalStyle } from 'styled-components';\n\n\nconst GlobalStyle = createGlobalStyle `\n     * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n\n    }\n    `\n    export default GlobalStyle;","import { useEffect, useState, useRef } from 'react'\nimport Recipe from './components/Recipe'\nimport styled from 'styled-components'\nimport GlobalStyle from './GlobalStyles'\nimport { v4 as uuidv4 } from 'uuid'\n// import Alert from './components/Alert'\n// import { motion } from \"framer-motion\"\n\nfunction App() {\n\n  const APP_ID = '741f35bb';\n  const APP_KEY = process.env.REACT_APP_API_KEY;\n\n    //all the recipes will be in the state\n  const [recipes, setRecipes] = useState([]); // empty array for array of objects in data hits\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('souvlaki');\n  // const [alert, setAlert] =useState('');\n  const inputRef = useRef();\n\n  useEffect(() => {\n    getRecipes();\n  },[query]);\n\n  useEffect(() => {\n    inputRef.current.focus();\n}, []);\n\n  const getRecipes = async () => {\n    // if(query !== \"\") { \n    // q is the query and what is after it is the thing that we are searching for\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    //ALERT NOT WORKING YET \n    // if(!response.data.more){\n    //   return setAlert('No food with such name')\n    // }\n    const data = await response.json()\n    setRecipes(data.hits);\n    console.log(data);\n    // setAlert('');\n    // setQuery('');\n  // } else {\n  //   setAlert('Please fill the form')\n  // }\n};\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  }\n\n  return (\n    <>\n    <GlobalStyle/>\n    <Wrapper className=\"App\">\n    <Logo>Mangiare </Logo> \n      <Form onSubmit={getSearch} className='search-form'>\n      {/* ALERT not working */}\n      {/* {alert!==\"\" && <Alert alert ={alert}/>} */} \n        <SearchBar \n          className = 'searc-bar' \n          type='text' \n          placeholder = 'Search recipe'\n          autoComplete = 'off'\n          ref={inputRef}\n          value ={search} \n          onChange = {updateSearch}/>\n        <Button \n          className ='search-button' \n          type='submit'>Search</Button>\n        \n      </Form>\n      <Recipes>\n      {recipes.map(food =>(\n        <Recipe \n          key={uuidv4()} //this has to be unique for each of the items displayed because react will make it render faster!?\n          title={food.recipe.label} \n          calories ={food.recipe.calories}\n          // yield ={food.recipe.yield}\n          ingredients={food.recipe.ingredients}\n          image ={food.recipe.image}\n          dish = {food.recipe.weight}\n          link = {food.recipe.url}\n        />\n      ))}\n      </Recipes>\n    </Wrapper>\n    </>\n  );\n}\n\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  background: #eed0c6;\n`\nconst Logo = styled.h1`\n  padding-top: 4vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family:'RocknRoll One', sans-serif; \n  font-size: 7vh;\n`\n\nconst Form = styled.form`\n  min-height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst SearchBar = styled.input`\n  width: 40%;\n  border: 5px solid #fedbd0;\n  border-radius: 3vh;\n  outline: none;\n  padding: 10px;\n  margin-left: 15vh;\n  &:hover {\n    box-shadow: 0px 5px 20px darkgrey;\n  }\n`\n\nconst Button = styled.button`\n  background: #e37f6d;\n  border:none;\n  border-radius: 3vh;\n  padding: 10px 20px;\n  margin: 1vh;\n  color: #feeae6;\n  border: 5px solid #fedbd0;\n  &:hover {\n    background: #6e9d9c;\n    box-shadow: 0px 5px 20px darkgrey;\n  }\n`\nconst Recipes = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  padding-left: 5rem;\n  padding-right: 5rem;\n`\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}